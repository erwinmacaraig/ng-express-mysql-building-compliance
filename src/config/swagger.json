{
  "swagger": "2.0",
  "info": {
    "description": "EvacConnect API Documentation",
    "version": "1.0.0",
    "title": "EvacConnect API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "ec2-52-64-253-171.ap-southeast-2.compute.amazonaws.com",
  "basePath": "/",
  "tags": [
    {
      "name": "users"
    },
    {
      "name": "locations"
    },
    {
      "name": "accounts"
    },
    {
      "name": "passwords"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Sign-up end point of a user's Sign-up page",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in" : "body",
            "name" : "user",
            "description" : "This is the JSON data to be sent to API",
            "required" : true,
            "schema" : {
              "properties" : {
                "first_name" :
                { "type" : "string" },
                "last_name" :
                { "type" : "string" },
                "email" :
                { "type" : "string" },
                "password" :
                { "type" : "string" },
                "confirm_password" :
                { "type" : "string" },
                "role_id" :
                { "type" : "number", "value" : 0 }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request, there's an invalid field or email existance",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/register/user-verification/{user_id}/{token}/false" : {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Verify new user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in" : "path",
            "name" : "user_id",
            "type" : "number",
            "value" : 0
          },
          {
            "in" : "path",
            "name" : "token",
            "type" : "string",
            "value" : ""
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request, invalid parameters",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/authenticate": {
      "post":{
        "summary": "Authenticate user by username/email and password credentials",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Authentication needs username/email and password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Enter username/email of user"
                },
                "password": {
                  "type": "string",
                  "description": "User password"
                },
                "keepSignedIn": {
                  "type": "boolean"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Authenticated",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/person-info":{
      "get": {
        "tags": ["users"],
        "summary": "Get person info",
        "produces": ["application/json"],
        "parameters":[
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "query",
            "name" : "userId",
            "type" : "number",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "schema": {
              "$ref": "#/definitions/ApiPersonStructure"
            }
          },
          "400": {
            "description": "Invalid internal operation(SQL)",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/update-person-info":{
      "patch":{
        "summary": "Update person information",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in": "body",
            "name": "person information",
            "description": "Information about the user to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type":"string",
                  "description": "The user's first name"
                },
                "last_name": {
                  "type":"string",
                  "description": "The user's family name"
                },
                "email": {
                  "type": "string",
                  "description": "The user's validated email used  in signing up"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Landline contact number"
                },
                "occupation": {
                  "type": "string",
                  "description": "The user's occupation"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person Info Updated Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }

      }
    },
    "/users":{
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Fetch latest users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in" : "query",
            "name" : "start",
            "type" : "number",
            "value" : 0
          },
          {
            "in" : "query",
            "name" : "end",
            "type" : "number",
            "value" : 25
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request, there's an invalid field or email existance",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/accounts/get-by-user/{user_id}":{
      "get" : {
        "summary" : "Get account by user's id",
        "tags" : [ "accounts" ],
        "parameters" : [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "path",
            "name" : "user_id",
            "required" : true,
            "description" : "User's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully responded",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/accounts/save-account-code" : {
      "post" : {
        "summary" : "Save code for warden",
        "tags" : [ "accounts" ],
        "parameters" : [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "body",
            "name" : "Account details",
            "description" : "This is the JSON data to be sent to API",
            "required" : true,
            "schema" : {
              "properties" : {
                "account_id" :
                { "type" : "number" },
                "location_id" :
                { "type" : "number" },
                "code" :
                { "type" : "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully responded",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/accounts/get-realated-accounts/{account_id}" : {
      "get" : {
        "summary" : "Get related accounts by account's id",
        "tags" : [ "accounts" ],
        "parameters" : [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "path",
            "name" : "account_id",
            "required" : true,
            "description" : "Account's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully responded",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/accounts/send-user-invitation/" : {
      "post" : {
        "summary" : "Send's user invitation",
        "tags" : [ "accounts" ],
        "parameters" : [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "body",
            "name" : "Invitation details",
            "description" : "This is the JSON data to be sent to API",
            "required" : true,
            "schema" : {
              "properties" : {
                "creator_id" : {
                  "type" : "number"
                },
                "first_name" : { 
                  "type" : "string"
                },
                "last_name" : { 
                  "type" : "string"
                },
                "email" : { 
                  "type" : "string"
                },
                "account_id" : { 
                  "type" : "number"
                },
                "location_id" : { 
                  "type" : "number"
                },
                "account_type" : { 
                  "type" : "number"
                },
                "sublocations" : {
                  "type" : "array",
                  "items" : {
                    "type" : "number"
                  }
                },
                "user_role_id" : {
                  "type" : "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully responded",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/location/get-by-account/{account_id}" : {
      "get" : {
        "summary": "Get locations by Account's id",
        "tags" : ["locations"],
        "parameters" : [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "path",
            "name" : "account_id",
            "description" : "Account id",
            "required" : true
          }
        ],
        "produces" : ["application/json"],
        "responses":{
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/location/get-by-userid-accountid/{user_id}/{account_id}":{
      "get" : {
        "summary": "Get locations by User's id Account's id",
        "tags" : ["locations"],
        "parameters" : [
          {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required": true
          },
          {
            "in" : "path",
            "name" : "user_id",
            "description" : "User id",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "account_id",
            "description" : "Account id",
            "required" : true
          }
        ],
        "produces" : ["application/json"],
        "responses":{
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/forgot/password/request" : {
      "post" : {
        "tags" : ["passwords"],
        "summary" : "Request of changing password",
        "parameters" : [
          {
            "in" : "body",
            "name" : "User's email",
            "description" : "This is the JSON data to be sent to API",
            "required" : true,
            "schema" : {
              "properties" : {
                "email" :
                { "type" : "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully responded",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/change/password-request/{user_id}/{token}" : {
      "get" : {
        "summary": "This is the link users will receive for changing of password",
        "tags" : ["passwords"],
        "parameters" : [
          {
            "in" : "path",
            "name" : "user_id",
            "description" : "User's id",
            "required" : true,
            "type" : "number"
          },
          {
            "in" : "path",
            "name" : "token",
            "description" : "Token",
            "required" : true,
            "type" : "string"
          }
        ],
        "produces" : ["application/json"],
        "responses" : {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    },
    "/forgot/password/change/users/password" : {
      "post" : {
        "tags" : ["passwords"],
        "summary" : "Changing password",
        "parameters" : [
          {
            "in" : "body",
            "name" : "user's details",
            "required" : true,
            "schema" : {
              "properties" : {
                "user_id" : { "type" : "number" },
                "token" : { "type" : "string" },
                "new_password" : { "type" : "string" },
                "confirm_password" : { "type" : "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully responded",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiResponseStructure"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponseStructure": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ApiPersonStructure": {
      "type": "object",
      "properties": {
        "first_name": { "type":"string", "required": true },
        "last_name": { "type":"string", "required": true },
        "email": { "type": "string", "required": true },
        "phone_number": { "type": "string" },
        "account_name": { "type": "string" },
        "occupation": { "type": "string"}
      }
    }
  }
}
